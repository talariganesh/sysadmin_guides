PHP OPTIMISATION:

memory_limit = 512M
max_execution_time=300;
max_input_time= 90
upload_max_filesize=25M;
post_max_size=20M;
max_input_vars=10000
realpath_cache_size = 64k
realpath_cache_ttl = 7200
realpath_cache_size=1M
realpath_cache_ttl=86400
pdo_mysql.cache_size = 2000
output_buffering = 4096
default_socket_timeout = 90

# security
cgi.fix_pathinfo=0
expose_php = Off

# php opcahe settings
zend_extension=opcache.so
opcache.enable=1
opcache.revalidate_freq=0
opcache.max_accelerated_files=16000
opcache.memory_consumption=512
opcache.interned_strings_buffer=16
opcache.fast_shutdown=1
opcache.enable_cli=1
opcache.save_comments=0
opcache.load_comments=0


################ PHP-FPM OPTIMISATION #################
# below settings for 8gb server


pm = dynamic
pm.max_children = 70
pm.start_servers = 20
pm.min_spare_servers = 10
pm.max_spare_servers = 35
pm.max_requests = 500
request_terminate_timeout = 300s
request_slowlog_timeout = 300s

##################### NGINX OPTIMISATION ##########################################

worker_processes  4;  # Number of CPUs 
worker_rlimit_nofile  100000; # Each connection needs a filehandle (or 2 if you are proxying)

events {
    worker_connections  19000;  # It's the key to high performance - have a lot of connections available
}
http {
		sendfile on;
		tcp_nopush on;

		##
        # timeouts
        #
        client_body_timeout 15;
        client_header_timeout 15;
        keepalive_timeout 65;
		keepalive_requests 200;
		reset_timedout_connection on;
        send_timeout 15;
		server_tokens  off;
		
		##
        # Gzip Settings
        ##

        gzip on;
        gzip_disable "msie6";
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 3;
        gzip_min_length 256;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

		##
        # buffers:
        ##

        client_body_buffer_size 1m;
        client_header_buffer_size 1k;
        client_max_body_size 50m;
        #large_client_header_buffers 8 32k;

        ##
        # Caches
        ##

        open_file_cache max=10000 inactive=30s;
        open_file_cache_valid 60s;
        open_file_cache_min_uses 5;
        open_file_cache_errors on;

location ~ .php$ {

fastcgi_keep_conn                   on;                      ##add it in .php location part
fastcgi_read_timeout                600s;
fastcgi_connect_timeout             600s;


}

########## HTTPD OPTIMISATION  ################

1. Disable unwanted modules:

#LoadModule actions_module modules/mod_actions.so
#LoadModule authn_anon_module modules/mod_authn_anon.so
#LoadModule authn_dbm_module modules/mod_authn_dbm.so
#LoadModule authz_dbm_module modules/mod_authz_dbm.so
#LoadModule authz_owner_module modules/mod_authz_owner.so
#LoadModule env_module modules/mod_env.so
#LoadModule ext_filter_module modules/mod_ext_filter.so
#LoadModule include_module modules/mod_include.so
#LoadModule info_module modules/mod_info.so
#LoadModule mime_magic_module modules/mod_mime_magic.so
#LoadModule status_module modules/mod_status.so
#LoadModule substitute_module modules/mod_substitute.so
#LoadModule suexec_module modules/mod_suexec.so
#LoadModule unique_id_module modules/mod_unique_id.so
#LoadModule userdir_module modules/mod_userdir.so
#LoadModule version_module modules/mod_version.so
#LoadModule vhost_alias_module modules/mod_vhost_alias.so

Proxy Modules:
#LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
#LoadModule proxy_balancer_module modules/mod_proxy_balancer.so
#LoadModule proxy_connect_module modules/mod_proxy_connect.so
#LoadModule proxy_ftp_module modules/mod_proxy_ftp.so
#LoadModule proxy_http_module modules/mod_proxy_http.so


2. Optimise settings:

ServerTokens Prod
KeepAlive On
KeepAliveTimeout 2

# prefork MPM
<IfModule prefork.c>
StartServers      32
MinSpareServers    8
MaxSpareServers   32
ServerLimit      512
MaxClients       512
MaxRequestsPerChild  4000
</IfModule>

HostnameLookups Off
ServerSignature Off

########### MAGENTO OPTIMISATION ##################################

SET foreign_key_checks = 0;
TRUNCATE dataflow_batch_export;
TRUNCATE dataflow_batch_import;
TRUNCATE log_customer;
TRUNCATE log_quote;
TRUNCATE log_summary;
TRUNCATE log_summary_type;
TRUNCATE log_url;
TRUNCATE log_url_info;
TRUNCATE log_visitor;
TRUNCATE log_visitor_info;
TRUNCATE log_visitor_online;
TRUNCATE report_viewed_product_index;
TRUNCATE report_compared_product_index;
TRUNCATE report_event;
TRUNCATE index_event;
TRUNCATE catalog_compare_item;
SET foreign_key_checks = 1;


######################## DATABASE OPTIMISED SETTINGS #########################
#MyISAM # 
key_buffer_size = 512M 
myisam-recover = FORCE,BACKUP 
myisam-repair-threads = 1 

# SAFETY & SPEED # 
max_allowed_packet = 64M 
max_connect_errors = 1000000 
symbolic-links = 0 
skip-external-locking 
skip-name-resolve 

# GENERIC # 
thread_stack = 512K 
table_cache = 2048 
sort_buffer_size = 64M 
join_buffer_size = 128M 
thread_concurrency = 16 
query_prealloc_size = 16384 
query_alloc_block_size = 16384 
read_buffer_size = 16M 
read_rnd_buffer_size = 32M 
bulk_insert_buffer_size = 512M 
myisam_sort_buffer_size = 128M 
wait_timeout = 3600 
concurrent_insert = 2 

# CACHES AND LIMITS # 
tmp_table_size = 512M 
max_heap_table_size = 512M 
query_cache_type = 1 
query_cache_size = 256M 
query_cache_limit = 512M 
max_connections = 1024 
thread_cache_size = 512 
open_files_limit = 65535 
table_definition_cache = 5120 
table_open_cache = 12288 # 

#INNODB # 
innodb_flush_method = O_DIRECT 
innodb_log_files_in_group = 2 
innodb_log_buffer_size = 1G 
innodb_log_file_size = 512M 
innodb_flush_log_at_trx_commit = 1 
innodb_file_per_table = 1 
innodb_buffer_pool_size = 8G # for slave keep this value to 12G 
innodb_thread_concurrency = 16 
innodb_additional_mem_pool_size = 32M


###################### RDS OPTIMISATION: ###############################################


NOTE: ALL VALUES ARE MENTIONED BYTES IN PARAMETER GROUP
[below optimisation done for bringit RDS server]
# useful link for converting gb to bytes --> http://www.conversion-metric.org/filesize/gigabytes-to-bytes

# MyISAM # 
key_buffer_size = 536870912		# for 512M  
myisam-recover = FORCE,BACKUP 
myisam-repair-threads = 1 
# current values
key_buffer_size = 16777216		# for 16M

# SAFETY & SPEED # 
max_allowed_packet = 67108864 	# for 64M 
max_connect_errors = 1000000 
symbolic-links = 0 
skip-external-locking 
skip-name-resolve 

# GENERIC # 
thread_stack = 524288 # for 512K 
table_cache = 2048 
sort_buffer_size = 67108864 # for 64M 
join_buffer_size = 134217728 # for 128M 
thread_concurrency = 16 
query_prealloc_size = 16384 
query_alloc_block_size = 16384 
read_buffer_size = 16777216		# for 16M 
read_rnd_buffer_size = 33554432  # for 32M 
bulk_insert_buffer_size = 536870912 # for 512M 
myisam_sort_buffer_size = 134217728 # for 128M 
wait_timeout = 3600 
concurrent_insert = 2 
#current values
thread_stack = 262144 
read_rnd_buffer_size = 524288

# CACHES AND LIMITS # 
tmp_table_size = 536870912 # for 512M  
max_heap_table_size = 536870912 # for 512M  
query_cache_type = 1 
query_cache_size = 268435456 # for 256M 
query_cache_limit = 536870912 # for 512M  
max_connections = 1024 
thread_cache_size = 512 
open_files_limit = 65535 
table_definition_cache = 5120 
table_open_cache = 12288 # 

#INNODB # 
innodb_flush_method = O_DIRECT 
innodb_log_files_in_group = 2 
innodb_log_buffer_size =  1073741824	# for 1G 
innodb_log_file_size = 536870912		# for 512M 
innodb_flush_log_at_trx_commit = 1 
innodb_file_per_table = 1 
innodb_buffer_pool_size = 10737418240 # for 10gb 
innodb_thread_concurrency = 16 
innodb_additional_mem_pool_size = 32M
# current values
innodb_log_buffer_size =   11626610688 # *3/4 of instance class memory
innodb_log_buffer_size = 8388608
innodb_log_file_size  = 134217728

######################## CONFIGURATION FOR PHP-FPM WITH NGINX ###########################
vi /etc/nginx/conf.d/default.conf

   location / {
                index index.php;
                try_files $uri $uri/ @handler;
                expires 7d;
        }

    ## These locations would be hidden by .htaccess normally
    location ^~ /app/                { deny all; }
    location ^~ /includes/           { deny all; }
    location ^~ /lib/                { deny all; }
    location ^~ /media/downloadable/ { deny all; }
    location ^~ /pkginfo/            { deny all; }
    location ^~ /report/config.xml   { deny all; }
    location ^~ /var/                { deny all; }
    location ^~ /magmi/             { deny all; }

    location ~ \.php$ {
    location ~ \.php$ {
        root           /export/www/htdocs;
        fastcgi_pass   unix:/var/run/php5-fpm.sock;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME   $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }


vi /etc/php-fpm.d/www.conf

user = nginx
group = nginx
listen = /var/run/php5-fpm.sock
listen.owner = www-data
listen.group = www-data
listen.mode = 0660

############# NGINX SECURE CONFIG ##################

server {
# add just after listen 80;

		add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
		

# Add at the end of config, before closing curly braces

set $block_xss 0;
if ($query_string ~ "base64_(en|de)code\(.*\)") {
set $block_xss 1;
}

if ($request_uri ~ "base64_(en|de)code\(.*\)") {
set $block_xss 1;
}

if ($query_string ~ "(<|%3C).*script.*(>|%3E)") {
set $block_xss 1;
}

if ($request_uri ~ "(<|%3C).*script.*(>|%3E)") {
set $block_xss 1;
}

if ($query_string ~ "(<|%3C).*iframe.*(>|%3E)") {
set $block_xss 1;
}

if ($request_uri ~ "(<|%3C).*iframe.*(>|%3E)") {
set $block_xss 1;
}

if ($query_string ~ "GLOBALS(=|\[|\%[0-9A-Z]{0,2})") {
set $block_xss 1;
}

if ($query_string ~ "_REQUEST(=|\[|\%[0-9A-Z]{0,2})") {
set $block_xss 1;
}

if ($block_xss = 1) {
return 403;
}
}		

################ SYSCTL OPTIMISATION  #################

net.ipv4.tcp_syncookies = 1
net.ipv4.ip_local_port_range = 2000 65000
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_max_syn_backlog = 3240000
net.core.somaxconn = 3240000
net.ipv4.tcp_max_tw_buckets = 1440000
net.core.rmem_default = 8388608
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216
net.ipv4.tcp_rmem = 4096 87380 16777216
net.ipv4.tcp_wmem = 4096 65536 16777216
net.ipv4.tcp_congestion_control = cubic
fs.file-max = 70000
net.ipv4.tcp_fin_timeout = 20
net.ipv4.tcp_keepalive_intvl = 15
net.ipv4.tcp_keepalive_probes = 5
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_tw_reuse = 1


############### REDIS OPTIMISATION ######################

1. write disable - comment out the following lines

save 900 1
save 300 10
save 60 10000

2. key eviction policy - allkeys-lru
3. maxclients - 110% and 150% of your expected peak number of connections,   
4. maxmemory limit - If using snapshots, set maxmemory at 45% of physical memory   
				   - without snapshots, set maxmemory at 95% of physical memory
5.  Latency
./redis-cli --latency -h ‘host’ -p ‘port’   
Note:  latency greater than 200μs likely points to a problem

6. Identify slow commands using the slow log 
./redis-cli and type slowlog get

7. Monitor client connections
./redis-cli and type info clients

